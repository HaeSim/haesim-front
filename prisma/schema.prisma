generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model authors {
  id         BigInt    @id @default(autoincrement())
  email      String    @unique
  name       String
  avatar_url String?
  bio        String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  posts      posts[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id          BigInt  @id @default(autoincrement())
  name        String
  slug        String  @unique
  description String?
  posts       posts[]

  @@index([slug])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model posts {
  id                   BigInt       @id @default(autoincrement())
  slug                 String       @unique
  title                String
  content              String
  excerpt              String?
  meta_description     String?
  featured_image       String?
  author_id            BigInt
  category_id          BigInt?
  published_at         DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?    @default(now()) @db.Timestamptz(6)
  is_published         Boolean?     @default(false)
  view_count           BigInt?      @default(0)
  reading_time_minutes Int?
  seo_title            String?
  og_image             String?
  authors              authors      @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories           categories?  @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  posts_tags           posts_tags[]

  @@index([published_at])
  @@index([slug])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model posts_tags {
  post_id BigInt
  tag_id  BigInt
  posts   posts  @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tags    tags   @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([post_id, tag_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tags {
  id         BigInt       @id @default(autoincrement())
  name       String
  slug       String       @unique
  posts_tags posts_tags[]

  @@index([slug])
}
